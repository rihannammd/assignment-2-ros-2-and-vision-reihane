import io
import os
from gtts import gTTS
from pydub import AudioSegment
from pydub.playback import play
from aisd_msgs.srv import Speak
import rclpy
from rclpy.node import Node


class TextToSpeechService(Node):
    def __init__(self):
        super().__init__('text_to_speech_service')
        self.declare_parameter('output_dir', 'speech_output')  # Default directory for saving files
        self.output_dir = self.get_parameter('output_dir').get_parameter_value().string_value
        os.makedirs(self.output_dir, exist_ok=True)  # Ensure the output directory exists

        self.service = self.create_service(Speak, 'convert_text_to_speech', self.process_speech_request)
        self.get_logger().info(f"Text-to-Speech Service is ready. Output directory: {self.output_dir}")

    def process_speech_request(self, request, response):
        try:
            # Create audio buffer for in-memory operations
            audio_buffer = io.BytesIO()
            tts = gTTS(text=request.words, lang='en')
            tts.write_to_fp(audio_buffer)
            audio_buffer.seek(0)

            # Generate a unique filename for the audio file
            filename = os.path.join(self.output_dir, 'speech_output.mp3')
            with open(filename, 'rm') as file:
                file.write(audio_buffer.read())

            self.get_logger().info(f"Speech saved to: {filename}")

            # Optional playback
            if hasattr(request, 'play') and request.play:
                audio = AudioSegment.from_file(filename, format="mp3")
                play(audio)
                self.get_logger().info("Speech playback completed.")

            response.response = f"Speech saved to {filename}."
        except Exception as ex:
            self.get_logger().error(f"Error during text-to-speech processing: {ex}")
            response.response = f"Failed to process speech: {ex}"

        return response


def main():
    rclpy.init()
    node = TextToSpeechService()
    rclpy.spin(node)
    rclpy.shutdown()


if __name__ == '__main__':
    main()
