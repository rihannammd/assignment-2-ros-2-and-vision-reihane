import io
from gtts import gTTS
from pydub import AudioSegment
from pydub.playback import play
from aisd_msgs.srv import Speak


import rclpy
from rclpy.node import Node

class SpeakService(Node):

    def __init__(self):
        super().__init__('sservice') #
        self.srv = self.create_service(Speak, 'speaker', self.speak_callback)

    

    def speak_callback(self, request, response):
        with io.BytesIO() as f: #Writes the generated speech audio directly into the in-memory buffer f
            #gTTS is The Google Text-to-Speech library which is used to convert the text in request.words into audio data
            gTTS(text=request.words, lang='en').write_to_fp(f) 
            f.seek(0) #Resets the buffer's pointer to the beginning, so it can be read from the start.
            song = AudioSegment.from_file(f, format="mp3") #Loads the audio data from the in-memory buffer f.
            play(song) #plays the song
            response.response = "OK"
            return response
        
    
def main():
    rclpy.init()

    sservice = SpeakService()

    rclpy.spin(sservice)

    rclpy.shutdown()


if __name__ == '__main__':
    main()   



