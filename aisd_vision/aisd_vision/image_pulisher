import rclpy
from rclpy.node import Node
from sensor_msgs.msg import Image
from cv_bridge import CvBridge
import cv2


class VideoFramePublisher(Node):
    def __init__(self):
        super().__init__('video_frame_publisher')
        self.declare_parameter('video_source', 0)  # Default to the first webcam
        self.declare_parameter('frame_rate', 10.0)  # Default frame rate in Hz

        # Retrieve parameters
        self.video_source = self.get_parameter('video_source').get_parameter_value().integer_value
        self.frame_rate = self.get_parameter('frame_rate').get_parameter_value().double_value
        self.timer_period = 1.0 / self.frame_rate

        # Initialize video capture
        self.cap = cv2.VideoCapture(self.video_source)
        if not self.cap.isOpened():
            self.get_logger().error(f"Failed to open video source: {self.video_source}")
            raise RuntimeError(f"Video source {self.video_source} cannot be opened.")

        self.publisher_ = self.create_publisher(Image, 'video_frames', 10)
        self.timer = self.create_timer(self.timer_period, self.publish_frame)
        self.bridge = CvBridge()

        self.get_logger().info(f"VideoFramePublisher node initialized with source {self.video_source} "
                               f"and frame rate {self.frame_rate} Hz.")

    def publish_frame(self):
        ret, frame = self.cap.read()
     
